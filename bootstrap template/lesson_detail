=======================================================================================================
0,HTML页面初始化
我们需要以一个基本的HTML模板开始,这样我们能够把所需要的bootstrap文件包含进来.
右面就是我们bootstrap项目的开头.其中有注释的两行是引入测试文件的代码,对页面运行没有任何影响,只是作为过关的判断代码运行,不要修改.
code:
    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Bootstrap&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;

        &lt;!--勿修改此行注释下的代码 否则人可能会对过关产生影响--&gt;
        &lt;script src='spec/spec.js'&gt;&lt;/script&gt;        &lt;!--引入测试代码--&gt;
        &lt;script src='spec/starter.js'&gt;&lt;/script&gt;     &lt;!--引入测试代码--&gt;
    &lt;/body&gt;
    &lt;/html&gt;

====================================================================================================
1,bootstrap引入

info:
    引入bootstrap文件
    为了使用bootstrap我们仅仅需要把四个文件引入到我们的模板当中来.
    因为bootstrap的js文件对于jquery是有依赖的,即jquery是bootstrap的前提,所以我们需要在bootstrap的js文件之前引入jquery的js文件.
    基于本教程的出发点，我们将会通过本地引入bootstrap资源文件的方式来引入bootstrap文件。
    它能够使所有bootstrap的CSS在我们的模板中生效。

step:
    在&lt;title&gt;标签后添加代码,引入我们相对路径为css/bootstrap.min.css和css/bootstrap-theme.min.css的文件css文件
    在&lt;body&gt;标签内的注释代码之前添加代码,引入相对路径为js/jquery.min.js和js/bootstrap.min.js的js文件

hint:
    引入文件的代码格式分别为
    &lt;link href='css/bootstrap.min.css' rel='stylesheet'&gt;
    &lt;link href='css/bootstrap-theme.min.css' rel='stylesheet'&gt;

    &lt;script src='js/jquery.min.js'&gt;&lt;/script&gt;
    &lt;script src='js/bootstrap.min.js'&gt;&lt;/script&gt;


code:
    在&lt;/title&gt;与&lt;/head&gt;之间添加如下两行代码
    &lt;link href='css/bootstrap.min.css' rel='stylesheet'&gt;
    &lt;link href='css/bootstrap-theme.min.css' rel='stylesheet'&gt;
    在&lt;!--勿修改 ... --&gt;的前两行添加如下两行代码
    &lt;script src='js/jquery.min.js'&gt;&lt;/script&gt;
    &lt;script src='js/bootstrap.min.js'&gt;&lt;/script&gt;

=============================================================================================================
2-1,Bootstrap的容器:container

info:
    bootstrap的container类(class)是非常有用的，它能在页面中创建一个居中的区域，然后我们能够把其他位置的内容放到里面。
    container类等价于创建了一个具有静态宽度并且margin值为auto的一个居中的div框。
    bootstrap的 container类的优点在于它是响应式的，它会以当前屏幕的宽度为基础计算出最佳的宽度予以应用。
step:
    在body标签内的开始(引入文件代码的前面)，使用container类创建一个div。它会作为放置页面其他所有内容(代码)的外围标签。
    通过标签内的style属性设置这个DIV的高度为600px并将其背景颜色设置为灰色(#cccccc)，你将会看到它所起到的作用：给其所包含的内容一个最美观的整体缩进布局.
hint:
    style的书写格式
    style='height: 600px; background-color: #cccccc'
code:
    在&lt;body&gt;之后&lt;script&gt;之前添加代码
    &lt;div class='container' style='height: 600px; background-color: #cccccc'&gt;&lt;/div&gt;

===========================================================================================================
2-2,背景区块 - jumbotron

info:
    上一节中,我们给container类添加了背景style样式,让我们看到了内容区块的大小.但bootstrap中已经设定好了专用的背景区块--jumbotron.
    jumbotron类(class)是一个亮灰色的圆角背景填充,给毫无边界的的内容添加上舒适的背景填充色.
    jumbotron将会填充满整个container区域,或者填充满其标签所占区域空间.用法和使用container一样,只要给标签引入jumbotron类(class)即可.
step:
    删掉上一节中我们给container容器添加的style属性
    在container类所在的标签内添加一对&lt;div&gt;&lt;/div&gt;标签 并给该标签添加jumbotron类
    在jumbotron标签内添如下代码以显示内容效果:	
	&lt;h1&gt;Hello Earth !!&lt;/h1&gt;
	&lt;h3&gt;Monsters. Monsters. Monsters. Monsters. Monsters. This is a world filled with monsters && monsters.&lt;/h3&gt;

hint:
	删掉:  style='height: 600px; background-color: #cccccc'
	在&lt;div class='container'&gt;&lt;/div&gt;内添加&lt;div class='jumbotron'&gt;&lt;/div&gt;
	在&lt;div class='jumbotron'&gt;&lt;/div&gt;内添加
	&lt;h1&gt;Hello Earth !!&lt;/h1&gt;
	&lt;h3&gt;Monsters. Monsters. Monsters. Monsters. Monsters. This is a world filled with monsters && monsters.&lt;/h3&gt;	

code:
	将    
	&lt;div class='container' style='height: 600px; background-color: #cccccc'&gt;&lt;/div&gt;
	修改成	
	&lt;div class='container'&gt;
	    &lt;div class='jumbotron'&gt;
		&lt;h1&gt;Hello Earth !!&lt;/h1&gt;
		&lt;h3&gt;Monsters. Monsters. Monsters. Monsters. Monsters. This is a world filled with monsters && monsters.&lt;/h3&gt;
	    &lt;/div&gt;
	&lt;/div&gt;

===========================================================================================================
2-3,栅格系统 - Grid System
info:栅格系统的原则是将所作用区域12等分(支持嵌套使用 可以无限12等分切割页面).

step:
hint:
code:

===========================================================================================================
3,标题和导航
现在我们已经有一个地方可以添加额外的HTML代码，我们可以添加标题文本然后再创建站点的主要导航条。

加入如下的文本或者你自定义的文字到container类的div标签当中。
code:
        &lt;h3&gt;我的个人页面 - 持续优化中&lt;/h3&gt;

现在并没有多少新的东西，这仅仅是一个标题，让我们转移到更有趣的方面，bootstrap导航。
Bootstrap 有一个nav类让我们能够创建各种各样的导航元素，你可以在&lt;body&gt;标签之后加入如下的代码。
code:
    &lt;nav class='navbar navbar-inverse navbar-fixed-top' role='navigation'&gt;
        &lt;div class='container'&gt;
            &lt;div class='navbar-header'&gt;
                &lt;a class='navbar-brand ' href='#' style='color: deepskyblue'&gt;
                    &lt;span class='glyphicon glyphicon-globe'&gt;&lt;/span&gt;
                    Earth
                &lt;/a&gt;
                &lt;button type='button' class='navbar-toggle' data-toggle='collapse' data-target='#bs-example-navbar-collapse-1'&gt;
                    &lt;span class='sr-only'&gt;Toggle navigation&lt;/span&gt;
                    &lt;span class='icon-bar'&gt;&lt;/span&gt;
                    &lt;span class='icon-bar'&gt;&lt;/span&gt;
                    &lt;span class='icon-bar'&gt;&lt;/span&gt;
                &lt;/button&gt;
            &lt;/div&gt;

            &lt;div class='collapse navbar-collapse' id='bs-example-navbar-collapse-1'&gt;
                &lt;ul class='nav navbar-nav navbar-right'&gt;
                    &lt;li class='active'&gt;&lt;a href='#'&gt;Home&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href='#'&gt;客 厅&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href='#'&gt;邻 居&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href='#'&gt;广 场&lt;/a&gt;&lt;/li&gt;
                    &lt;li class='dropdown'&gt;
                        &lt;a href='#' class='dropdown-toggle' data-toggle='dropdown'&gt;后 院&lt;b class='caret'&gt;&lt;/b&gt;&lt;/a&gt;
                        &lt;ul class='dropdown-menu'&gt;
                            &lt;li&gt;&lt;a href='#'&gt;账 户&lt;/a&gt;&lt;/li&gt;
                            &lt;li class='divider'&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href='#'&gt;设 置&lt;/a&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/nav&gt;

navbar相关的类拥有导航条所有的样式，添加navbar-inverse类将会应用一个很酷的黑色风格, navbar-fixed-top将会把导航栏固定在页面顶部,
如果不加的话, 导航栏将会跟随内容滚动，这是一个bootstrap的常见搭配。
导航栏内部的container会将导航栏内的显示内容以最合适的边距展示.
navbar-header内放置站点标志navbar-brand 和 只有在移动设备上才显示出来的下拉按钮navbar-toggle.
navbar-brand内我们通过glyphicon glyphicon-globe来引用地球图案的图标, 并通过style来设置图标颜色.
navbar-toggle通过data-target和下面navbar-collapse的id或者name绑定, 实现下拉菜单效果.navbar-toggle书写的格式比较固定, 不需要修改.
navbar-collapse内放置导航按钮组nav navbar-nav, 按钮组按照ui和li标签关系编排.可以添加一个active类到“HOME”列表项中, 实现激活效果.
li标签的dropdown类可以在菜单中实现下拉菜单效果.
为了正文内容不被navbar导航条遮盖 且去掉上一节为了突出效果而给container添加的背景色.
删掉style的:height background-color属性, 添加:margin-top属性, 值为40px.
我建议在这个样式的基础上进行拓展从而创造你的独一无二的导航。但在这个教程中我们仍然会使用基础的bootstrap样式。
在浏览器中打开，当你调整浏览器窗口的宽度时你就能够看到导航栏样式随屏幕大小的变化.

===================================================================================================
4,主内容和侧边栏
我们已经完成了站点的主导航，现在我们需要添加主要内容区和一个侧边栏来支持更多的链接或导航路径。请把下面的代码添加到&lt;/h3&gt;之后。
添加大量文本文字只是为了让页面拉长一些
code:
        &lt;div class='col-md-12'&gt;
            &lt;div id='p1' class='jumbotron'&gt;
                &lt;h2&gt;道具:Section 1&lt;/h2&gt;
                &lt;p&gt;　　小歌班初期的“砌末”(道具)，都是日常生活用具，后期及绍兴文戏时期，模仿京剧、绍剧道具，并由“检场”人(越剧称“值台师傅”)管理。所用道具都放在一大木箱(俗称“百宝箱”)里。这些道具是向“堂中行头”师傅租来的。以后，主要演员有了“私房行头”，道具中的桌围、椅帔也成了主要演员必备的“私彩”。&lt;/p&gt;
                &lt;p&gt;　　当时，为与比较写实的布景吻合，以及表演上的需要，对舞台上常用的道具，如刀、枪、剑、棍、马鞭等，加以改良，达到美观、轻巧，适合女演员使用。而对另一些道具，就直接采用生活用品，或仿真制作。其时越剧界出现了兼职主管道具的演职人员，开始向“王生记”家具店租用红木家具，向电影厂租用道具，或去旧货店及豫园小商品摊档购买生活用品。特殊需要的道具，按图样到灯彩店去定做。道具制作师，采用翻模脱胎、篾扎纸糊、立粉彩绘、刻花裱托等工艺技法，制作出各式各样道具。&lt;/p&gt;
            &lt;/div&gt;
            &lt;div id='p2' class='jumbotron'&gt;
                &lt;h2&gt;道具:Section 2&lt;/h2&gt;
                &lt;p&gt;　　如《梁山伯与祝英台》中的酒杯、花瓶，形态逼真。《情探》中的龙王、神像,《北地王》中的先祖列宗，都用篾扎纸糊后彩绘，似庙里菩萨一般。《红楼梦》中的花篮、薰炉、立地花瓶等，都是既逼真又美观，令观者赏心悦目。越剧的道具，具有“轻”“巧”“美”“牢”的艺术特点，为戏曲界同行所称道，如明角灯，各地不少兄弟剧种剧团，曾派人到上海越剧院来学习过道具制作。&lt;/p&gt;
                &lt;p&gt;　　1981年9月，上海越剧院演出的《凄凉辽宫月》中的道具(由技师李其实制作)，获首届上海戏剧节道具奖，首开道具获单项奖的先例。&lt;/p&gt;
            &lt;/div&gt;
            &lt;div id='p3' class='jumbotron'&gt;
                &lt;h2&gt;Main Content Section 3&lt;/h2&gt;
                &lt;p&gt;Occaecat commodo aliqua delectus. Fap craft beer deserunt skateboard ea. Lomo bicycle rights adipisicing banh mi, velit ea sunt next level locavore single-origin coffee in magna veniam. High life id vinyl, echo park consequat quis aliquip banh mi pitchfork. Vero VHS est adipisicing. Consectetur nisi DIY minim messenger bag. Cred ex in, sustainable delectus consectetur fanny pack iphone.&lt;/p&gt;
                &lt;p&gt;Veniam marfa mustache skateboard, adipisicing fugiat velit pitchfork beard. Freegan beard aliqua cupidatat mcsweeney's vero. Cupidatat four loko nisi, ea helvetica nulla carles. Tattooed cosby sweater food truck, mcsweeney's quis non freegan vinyl. Lo-fi wes anderson +1 sartorial. Carles non aesthetic exercitation quis gentrify. Brooklyn adipisicing craft beer vice keytar deserunt.&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
然后删掉上一节添加的额外效果 container的 style='margin-top: 70px' 和其内部标签 &lt;h3&gt;我的个人页面 - 持续优化中&lt;/h3&gt;
刷新页面 我们将会看到铺满全屏的文字内容 jumbotron类为其内部包围的内容添加了灰色圆角背景
bootstrap为我们提供了良好的布局方法col-lg-x等.
这正是我们需要弄懂的bootstrap的栅格系统，当然，bootstrap的官方文档中涵盖了更多的细节，但我们将会以基础开始,更好地理解它。
将col-lg-12 改为col-lg-9 此时 页面文字的布局发生了偏移 文字显示只占了页面宽度的9/12
栅格系统的原则是将所作用区域12等分(支持嵌套使用 可以无限12等分切割页面)
接下来我们在和&lt;div class='col-lg-9'&gt;...&lt;/div&gt;后面添加
code:
        &lt;div class='col-md-3' id='myScrollspy'&gt;
            &lt;div class='nav nav-tabs nav-stacked affix-top' data-spy='affix' data-offset-top='10'&gt;
                &lt;a class='list-group-item active'&gt;定位坐标&lt;/a&gt;
                &lt;a href='#p1' class='list-group-item'&gt;道具:Section 1&lt;/a&gt;
                &lt;a href='#p2' class='list-group-item'&gt;道具:Section 2&lt;/a&gt;
                &lt;a href='#p3' class='list-group-item'&gt;Main Content Section 3&lt;/a&gt;
            &lt;/div&gt;
        &lt;/div&gt;
代码中你可以看到名为col-md-9和col-md-3的类。它们会把页面分割成左边9列宽度和右边3列宽度的两部分，形成我们的内容区域和侧边栏。
使用栅格系统的其中一个好处就是它会根据视窗宽度动态计算出列的宽度，因此你不需要写任何的媒体查询也能使你的站点工作在任何的屏幕分辨率下。
你可以通过改变col-lg-x的数量和调整浏览器的大小来观察它们的效果。你会注意到当内容区小于992px的时候，这些列会垂直地堆放。
这是由于col-lg-x对应的是在大屏幕时的布局分布
col-xs col-sm col-md col-lg分别对应着不同分辨率下的布局设置(&lt;768px)(≥768px)(≥992px)(≥1200px)

有'定位坐标'标题的部分是一个列表
这个列表和前面的文字段落本没有关系 但是我们可以给他们建立关系
1:给每个段落加上id名	2:给列表中每个链接对应上不同id
这样我们的导航列表就完成了
这是一个简单的展示！上面的代码照字面理解仅仅是一个具有类为list-group的列表，但它却为我们创造了一个导航面板。
=============================================================================================================

通过bootstrap所提供的特性，我们给出了这个非常快速的bootstrap入门教程.
但花点时间练习并多多查阅官方的文档，不久之后你就可以成为一个bootstrap的专家了。
在阅读本教程之后你应该懂得如何使用栅格系统，不同类型的导航和响应式设计的基本原理。

==============================================================================================================
